package service;

import abstracts.ServletAdapter;
import com.google.gson.JsonObject;
import library.dateutility.DateUtil;
import library.utility.JDBCUtilities;
import library.utility.MapUtil;
import model.LabRecord;

import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.Map;

import static library.utility.MapUtil.castToInt;

/**
 * Created by jeffy on 2017/10/30.
 */
public class LabRecordService extends ServletAdapter {
    private List<Map<String, Object>> objects;
    private Map<String, Object> object;
    private JsonObject jsonObject = new JsonObject();
    private LabRecord labRecord;

    public String getLabCountByChartNoDateRangeGroupByKind(int chartNo, String startDate, String endDate) {
        JsonObject jsob = new JsonObject();
        try {
            objects = labRecord.queryLabCountByChartNoDateRangeGroupByKind(chartNo, startDate, endDate);
            int count = objects.stream()
                    .mapToInt(map -> castToInt(map.get("count")))
                    .sum();

            jsob.addProperty(MapUtil.KEY_SUMMARY, count);
            jsob.add(MapUtil.KEY_DETAILDATA, MapUtil.listMapToJsonArray(objects));
            jsonObject = MapUtil.getSuccessResult(jsob);
//            if (objects.size() > 0) {
//                jsonObject = MapUtil.getSuccessResult(MapUtil.listMapToJsonArray(objects));
//            } else {
//                jsonObject = MapUtil.getFailureResult("LabRecord.queryLabCountByChartNoDateRangeGroupByKind chart_no= " + chartNo +
//                        " startDate=" + startDate + " endDate=" + endDate + " No Data Found ");
//            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
            jsonObject = MapUtil.getFailureResult(ex.getMessage());
        }

        return jsonObject.toString();
    }

    public String getLabCountByChartNoYearsGroupByKind(int chartNo, int years) {
        String startDate = DateUtil.dateToROCDateString(LocalDate.now().plus(-years, ChronoUnit.YEARS));
        String endDate = DateUtil.dateToROCDateString(LocalDate.now());

        return getLabCountByChartNoDateRangeGroupByKind(chartNo, startDate, endDate);
    }


    @Override
    public String run(JsonObject parametersJsObj) {
        Connection myConnection = null;
        JDBCUtilities jdbcUtil = new JDBCUtilities();
        String result = null;

        try {
            myConnection = jdbcUtil.getConnection();
            labRecord = new LabRecord(myConnection);
            String empNo = parametersJsObj.get("empNo").getAsString();
            String method = parametersJsObj.get("method").getAsString();

            //  get Lab data by chart_no, start_date, end_date then group by kind_id
            if (method.equals("getLabCountByChartNoDateRangeGroupByKind")) {
                int chartNo = parametersJsObj.get("chartNo").getAsInt();
                String startDate = parametersJsObj.get("startDate").getAsString();
                String endDate = parametersJsObj.get("endDate").getAsString();
                result = getLabCountByChartNoDateRangeGroupByKind(chartNo, startDate, endDate);
            }

            //  get Lab data by chart_no, years then group by kind_id
            if (method.equals("getLabCountByChartNoYearsGroupByKind")) {
                int chartNo = parametersJsObj.get("chartNo").getAsInt();
                int years = parametersJsObj.get("years").getAsInt();
                result = getLabCountByChartNoYearsGroupByKind(chartNo, years);
            }


        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        } finally {
            if (myConnection != null) { JDBCUtilities.closeConnection(myConnection); }
        }
        return result;
    }


    public static void main(String[] args) {
        JsonObject jsonObject = new JsonObject();
        //Map<String, String> map = new LinkedHashMap<>();
        LabRecordService labRecordService = new LabRecordService();
        String resultStrng;

        jsonObject.addProperty("empNo", "ORCL");
        jsonObject.addProperty("sessionID", 1);

        jsonObject.addProperty("startDate", "0940806");
        jsonObject.addProperty("endDate", "1030913");
        jsonObject.addProperty("chartNo", 923883);

        jsonObject.addProperty("method", "getLabCountByChartNoDateRangeGroupByKind");
        resultStrng = labRecordService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nLabRecordService.run getLabCountByChartNoDateRangeGroupByKind chartNo=923833 startDate='0940806' endDate='1030913' :"  + resultStrng);

        jsonObject.addProperty("years", 5);
        jsonObject.addProperty("method", "getLabCountByChartNoYearsGroupByKind");
        resultStrng = labRecordService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nLabRecordService.run getLabCountByChartNoYearsGroupByKind chartNo=923833 years=5 :"  + resultStrng);


    }
}



