package service;

import abstracts.ServletAdapter;
import com.google.gson.JsonObject;
import model.Freeze;
import library.utility.JDBCUtilities;
import library.utility.MapUtil;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

/**
 * Created by jeffy on 2017/7/21.
 */
public class FreezeService extends ServletAdapter {
    private List<Map<String, Object>> objects;
    private Map<String, Object> object;
    private JsonObject jsonObject = new JsonObject();
    private Freeze freeze;

    public String getFreezeMasterListByStockAndRangeOfMonthAndSerialId(String stock, String startMonth, String endMonth, String serialId) {
        try {
            String startFreezeNo = startMonth + "000";
            String endFreezeNo = endMonth + "999";
            objects = freeze.queryFreezeMasterListByStockAndSerialIdAndRangeOfFreezeNo(stock, startFreezeNo, endFreezeNo, serialId);

            if (objects.size() > 0) {
                jsonObject = MapUtil.getSuccessResult(MapUtil.listMapToJsonArray(objects));
            } else {
                jsonObject = MapUtil.getFailureResult("Freeze.queryFreezeMasterListByStockAndSerialIdAndRangeOfFreezeNo No Data Found ");
            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
            jsonObject = MapUtil.getFailureResult(ex.getMessage());
        }

        return jsonObject.toString();
    }

    public String getFreezeDetailByStockFreezeNo(String stock, String freezeNo) {
        try {
            objects = freeze.queryFreezeDetailByStockFreezeNo(stock, freezeNo);

            if (objects.size() > 0) {
                jsonObject = MapUtil.getSuccessResult(MapUtil.listMapToJsonArray(objects));
            } else {
                jsonObject = MapUtil.getFailureResult("Freeze.queryFreezeDetailByStockFreezeNo No Data Found ");
            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
            jsonObject = MapUtil.getFailureResult(ex.getMessage());
        }

        return jsonObject.toString();
    }

    @Override
    public String run(JsonObject parametersJsObj) {
        Connection myConnection = null;
        JDBCUtilities jdbcUtil = new JDBCUtilities();
        String result = null;

        try {
            myConnection = jdbcUtil.getConnection();
            freeze = new Freeze(myConnection);
            String method = parametersJsObj.get("method").getAsString();

            //  get Freeze by stock and serail
            if (method.equals("getFreezeMasterListByStockAndRangeOfMonthAndSerialId")) {
                String stock = parametersJsObj.get("stock").getAsString();
                String startMonth = parametersJsObj.get("startMonth").getAsString();
                String endMonth = parametersJsObj.get("endMonth").getAsString();
                String serailId = parametersJsObj.get("serialId").getAsString();
                result = getFreezeMasterListByStockAndRangeOfMonthAndSerialId(stock, startMonth, endMonth, serailId);
            }

            //  get Freeze Items by stock and freeze_no
            if (method.equals("getFreezeDetailByStockFreezeNo")) {
                String stock = parametersJsObj.get("stock").getAsString();
                String freezeNo = parametersJsObj.get("freezeNo").getAsString();
                result = getFreezeDetailByStockFreezeNo(stock, freezeNo);
            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        } finally {
            if (myConnection != null) {
                JDBCUtilities.closeConnection(myConnection);
            }
        }
        return result;
    }

    public static void main(String[] args) {
        JsonObject jsonObject = new JsonObject();
        //Map<String, String> map = new LinkedHashMap<>();
        FreezeService freezeService = new FreezeService();
        String resultStrng;

        jsonObject.addProperty("empNo", "KSPH");
        jsonObject.addProperty("sessionID", 1);

        jsonObject.addProperty("stock", "SS");
        jsonObject.addProperty("startMonth", "10510");
        jsonObject.addProperty("endMonth", "10512");
        jsonObject.addProperty("serialId", "H2NPCV0011382TA");
        jsonObject.addProperty("method", "getFreezeMasterListByStockAndRangeOfMonthAndSerialId");
        resultStrng = freezeService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nFreezeService.run getFreezeMasterListByStockAndRangeOfMonthAndSerialId stock='SS' startMonth='10510' endMonth='10512' serialId='H2NPCV0011382TA': " + resultStrng);

        jsonObject.addProperty("freezeNo", "10512005");
        jsonObject.addProperty("method", "getFreezeDetailByStockFreezeNo");
        resultStrng = freezeService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nFreezeService.run getFreezeDetailByStockFreezeNo stock='SS' freezeNo='10512005' : " + resultStrng);
    }
}
