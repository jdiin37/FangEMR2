package model;

import library.dateutility.DateUtil;
import library.utility.EntityFactory;
import library.utility.JDBCUtilities;
import library.utility.MapUtil;

import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Map;

/**
 * Created by jeffy on 2017/10/13.
 */
public class OrRecord {
    private Connection con;

    public OrRecord(Connection con) {
        this.con = con;
    }

    public Map<String, Object> queryOrVisitedBychartNo(int chartNo) throws SQLException {
        String queryString =
                "SELECT COUNT(*) count " +
                "  FROM or1 a " +
                " WHERE a.chart_no = ? " +
                "   AND op_start_time IS NOT NULL ";

        EntityFactory orrecordEntity = new EntityFactory(con, queryString);
        return orrecordEntity.findSingle(new Object[]{chartNo});
    }

    public Map<String, Object> queryOrVisitedBychartNoAndYears(String startDate, String endDate, int chartNo) throws SQLException {
        String queryString =
                "SELECT COUNT(*) count " +
                "  FROM or1 a " +
                " WHERE op_date BETWEEN ? AND ? " +
                "   AND a.chart_no = ? " +
                "   AND op_start_time IS NOT NULL ";

        EntityFactory orrecordEntity = new EntityFactory(con, queryString);
        return orrecordEntity.findSingle(new Object[]{startDate, endDate, chartNo});
    }

    public static void main(String[] args) {
        Connection myConnection = null;
        JDBCUtilities jdbcUtil = new JDBCUtilities();
        String resultStrng;

        try {
            myConnection = jdbcUtil.getConnection();
            OrRecord orRecord = new OrRecord(myConnection);

            int chartNo = 912473;

            System.out.printf("\nOrRecord.queryOrVisitedBychartNo chartNo=%d JsonObject:%s ",
                    chartNo, MapUtil.mapToJsonObject(orRecord.queryOrVisitedBychartNo(chartNo)).toString());

            String startDate = DateUtil.dateToROCDateString(LocalDate.now().plus(-5, ChronoUnit.YEARS));
            String endDate = DateUtil.dateToROCDateString(LocalDate.now());

            System.out.printf("\nOrRecord.queryOrVisitedBychartNoAndYears startDate=%s endDate=%s chartNo=%d JsonObject:%s ",
                   startDate, endDate, chartNo, MapUtil.mapToJsonObject(orRecord.queryOrVisitedBychartNoAndYears(startDate, endDate, chartNo)).toString());

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        } finally {
            if (myConnection != null) {
                JDBCUtilities.closeConnection(myConnection);
            }
        }
    }
}


