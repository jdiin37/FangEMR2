package service;

import abstracts.ServletAdapter;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import library.utility.MapGroupingUtil;
import model.Order;
import library.utility.JDBCUtilities;
import library.utility.MapUtil;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

/**
 * Created by jeffy on 2017/8/29.
 */
public class OrderService extends ServletAdapter {
    private List<Map<String, Object>> objects;
    private Map<String, Object> object;
    private JsonObject jsonObject = new JsonObject();
    private Order order;

    private List<Map<String, Object>> getOrderDetailByStockOrderNoListOfMap(String stock, String startMonth, String endMonth, String serialId) throws SQLException {
        String startOrderNo = startMonth + "000";
        String endOrderNo = endMonth + "999";
        return order.queryOrderDetailByStockOrderNo(stock, startOrderNo, endOrderNo, serialId);
    }

    public String getOrderDetailByStockOrderNo(String stock, String startMonth, String endMonth, String serialId) {

        try {
            objects = getOrderDetailByStockOrderNoListOfMap(stock, startMonth, endMonth, serialId);

            if (objects.size() > 0) {
                jsonObject = MapUtil.getSuccessResult(MapUtil.listMapToJsonArray(objects));
            } else {
                jsonObject = MapUtil.getFailureResult("Order.queryOrderDetailByStockOrderNo No Data Found ");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            jsonObject = MapUtil.getFailureResult(ex.getMessage());
        }

        return jsonObject.toString();
    }

    public String getOrderDetailByStockOrderNoThenGrouping(String stock, String startMonth, String endMonth, String serialId
            , List<String> masterCols, List<String> detailCols) {

        try {
            objects = getOrderDetailByStockOrderNoListOfMap(stock, startMonth, endMonth, serialId);

            if (objects.size() > 0) {
                JsonArray resultJsArray = MapGroupingUtil.groupListMapToJsonArray(MapGroupingUtil.getGroupingResultMap(objects, masterCols, detailCols));
                jsonObject = MapUtil.getSuccessResult(resultJsArray);
            } else {
                jsonObject = MapUtil.getFailureResult("Order.queryOrderDetailByStockOrderNo No Data Found ");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            jsonObject = MapUtil.getFailureResult(ex.getMessage());
        }

        return jsonObject.toString();
    }


    @Override
    public String run(JsonObject parametersJsObj) {
        Connection myConnection = null;
        JDBCUtilities jdbcUtil = new JDBCUtilities();
        String result = null;

        try {
            myConnection = jdbcUtil.getConnection();
            order = new Order(myConnection);
            String method = parametersJsObj.get("method").getAsString();
            String stock = parametersJsObj.get("stock").getAsString();
            String startMonth = parametersJsObj.get("startMonth").getAsString();
            String endMonth = parametersJsObj.get("endMonth").getAsString();
            String serailId = parametersJsObj.get("serialId").getAsString();

            //  get Order by stock, and order_no
            if (method.equals("getOrderDetailByStockOrderNo")) {
                result = getOrderDetailByStockOrderNo(stock, startMonth, endMonth, serailId);
            }

            //  get Order by stock, and order_no then Grouping by stock, order_no
            if (method.equals("getOrderDetailByStockOrderNoThenGrouping")) {

                List<String> masterCols = Arrays.asList("stock", "order_no");
                List<String> detailCols = Arrays.asList("item_no", "rec_count", "barcode", "full_name", "supp_no",
                        "supp_name", "order_date", "delivery_date", "orig_unit", "sale_unit", "ratio", "price",
                        "orig_price", "order_saleunit_qty", "order_origunit_qty", "send_rate", "send_qty", "tot_qty",
                        "effect_date", "rec_price", "rec_qty", "invoice_amt", "invoice_no", "invoice_date", "rec_pe_no",
                        "update_flag_pad", "pad_date", "pad_clerk", "trans_date", "trans_clerk");

                result = getOrderDetailByStockOrderNoThenGrouping(stock, startMonth, endMonth, serailId, masterCols, detailCols);
            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        } finally {
            if (myConnection != null) {
                JDBCUtilities.closeConnection(myConnection);
            }
        }
        return result;
    }

    public static void main(String[] args) {
        JsonObject jsonObject = new JsonObject();
        //Map<String, String> map = new LinkedHashMap<>();
        OrderService orderService = new OrderService();
        String resultStrng;

        jsonObject.addProperty("empNo", "KSPH");
        jsonObject.addProperty("sessionID", 1);
        jsonObject.addProperty("stock", "SS");
        jsonObject.addProperty("startMonth", "10601");
        jsonObject.addProperty("endMonth", "10603");
        jsonObject.addProperty("serialId", "H2NPCV0011382TA");

        jsonObject.addProperty("method", "getOrderDetailByStockOrderNo");
        resultStrng = orderService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nOrdrecService.run getOrderDetailByStockOrderNo stock='SS' startMonth='10601' endMonth='10603' : " + resultStrng);

        jsonObject.addProperty("method", "getOrderDetailByStockOrderNoThenGrouping");
        resultStrng = orderService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nOrdrecService.run getOrderDetailByStockOrderNoThenGrouping stock='SS' startMonth='10601' endMonth='10603' : " + resultStrng);
    }
}
