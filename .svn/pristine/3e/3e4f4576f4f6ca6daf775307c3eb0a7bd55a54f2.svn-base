package service;

import abstracts.ServletAdapter;
import com.google.gson.JsonObject;
import library.dateutility.DateUtil;
import library.utility.JDBCUtilities;
import library.utility.MapUtil;
import model.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import static library.utility.MapUtil.castToInt;

/**
 * Created by jeffy on 2017/10/13.
 */
public class EMRViewService extends ServletAdapter {
    private List<Map<String, Object>> objects;
    private Map<String, Object> object;
    private JsonObject jsonObject = new JsonObject();
    private Patinp patinp;
    private Patopd patopd;
    private OrRecord orRecord;
    private LabRecord labRecord;
    private XrayOrd xrayOrd;

    private Map<String, Object> getOpdVisitedByChartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = patopd.queryOpdVisitedByChartNo(chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getOpdVisitedByChartNoAndYears(String startDate, String endDate, int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = patopd.queryOpdVisitedByChartNoAndYears(startDate, endDate, chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getInpVisitedBychartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = patinp.queryInpVisitedBychartNo(chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getInpVisitedBychartNoAndYears(String startDate, String endDate, int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = patinp.queryInpVisitedBychartNoAndYears(startDate, endDate, chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getOrVisitedBychartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = orRecord.queryOrVisitedBychartNo(chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getOrVisitedBychartNoAndYears(String startDate, String endDate, int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = orRecord.queryOrVisitedBychartNoAndYears(startDate, endDate, chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getLabVisitedBychartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = labRecord.queryLabVisitedBychartNo(chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getLabVisitedBychartNoAndYears(String startDate, String endDate, int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = labRecord.queryLabVisitedBychartNoAndYears(startDate, endDate, chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getXrayVisitedBychartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = xrayOrd.queryXrayVisitedBychartNo(chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    private Map<String, Object> getXrayVisitedBychartNoAndYears(String startDate, String endDate, int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        try {
            result = xrayOrd.queryXrayVisitedBychartNoAndYears(startDate, endDate, chartNo);
        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        }
        return result;
    }

    public String getChartEMRSummaryByChartNo(int chartNo) {
        Map<String, Object> result = new LinkedHashMap<>();
        int count = 0;
        try {
            object = getInpVisitedBychartNo(chartNo);
            result.put("OPD", castToInt(object.get("count")));

            object = getOpdVisitedByChartNo(chartNo);
            result.put("INP", castToInt(object.get("count")));

            object = getOrVisitedBychartNo(chartNo);
            result.put("OR", castToInt(object.get("count")));

            object = getLabVisitedBychartNo(chartNo);
            result.put("LAB", castToInt(object.get("count")));

            object = getXrayVisitedBychartNo(chartNo);
            result.put("XRAY", castToInt(object.get("count")));

            jsonObject = MapUtil.getSuccessResult(MapUtil.mapToJsonObject(result));

        } catch (Exception ex) {
            System.out.printf("\nEMRViewService.getChartEMRSummaryByChartNo chartNo:%s errorMessage:%s", chartNo, ex.getMessage());
        }

        return jsonObject.toString();
    }

    public String getChartEMRSummaryByChartNoAndYears(int chartNo, int years) {
        Map<String, Object> result = new LinkedHashMap<>();
        String endDate = DateUtil.dateToROCDateString(LocalDate.now());
        String startDate = DateUtil.dateToROCDateString(LocalDate.now().plus(-years, ChronoUnit.YEARS));
        int count = 0;
        try {
            object = getInpVisitedBychartNoAndYears(startDate, endDate, chartNo);
            result.put("OPD", castToInt(object.get("count")));

            object = getOpdVisitedByChartNoAndYears(startDate, endDate, chartNo);
            result.put("INP", castToInt(object.get("count")));

            object = getOrVisitedBychartNoAndYears(startDate, endDate, chartNo);
            result.put("OR", castToInt(object.get("count")));

            object = getLabVisitedBychartNoAndYears(startDate, endDate, chartNo);
            result.put("LAB", castToInt(object.get("count")));

            object = getXrayVisitedBychartNoAndYears(startDate, endDate, chartNo);
            result.put("XRAY", castToInt(object.get("count")));

            jsonObject = MapUtil.getSuccessResult(MapUtil.mapToJsonObject(result));

        } catch (Exception ex) {
            System.out.printf("\nEMRViewService.getChartEMRSummaryByChartNo chartNo:%s errorMessage:%s", chartNo, ex.getMessage());
        }

        return jsonObject.toString();
    }

    @Override
    public String run(JsonObject parametersJsObj) {
        Connection myConnection = null;
        JDBCUtilities jdbcUtil = new JDBCUtilities();
        String result = null;

        try {
            myConnection = jdbcUtil.getConnection();

            patopd = new Patopd(myConnection);
            patinp = new Patinp(myConnection);
            orRecord = new OrRecord(myConnection);
            labRecord = new LabRecord(myConnection);
            xrayOrd = new XrayOrd(myConnection);

            String empNo = parametersJsObj.get("empNo").getAsString();
            Long sessionID = parametersJsObj.get("sessionID").getAsLong();
            String method = parametersJsObj.get("method").getAsString();

            //  get EMR View Summary by chartNo
            if (method.equals("getChartEMRSummaryByChartNo")) {
                int chartNo = parametersJsObj.get("chartNo").getAsInt();
                result = getChartEMRSummaryByChartNo(chartNo);
            }

            //  get EMR View Summary by chartNo and years
            if (method.equals("getChartEMRSummaryByChartNoAndYears")) {
                int chartNo = parametersJsObj.get("chartNo").getAsInt();
                int years = parametersJsObj.get("years").getAsInt();
                result = getChartEMRSummaryByChartNoAndYears(chartNo, years);
            }

        } catch (SQLException ex) {
            JDBCUtilities.printSQLException(ex);
        } finally {
            if (myConnection != null) { JDBCUtilities.closeConnection(myConnection); }
        }
        return result;
    }


    public static void main(String[] args) {
        JsonObject jsonObject = new JsonObject();
        //Map<String, String> map = new LinkedHashMap<>();
        EMRViewService emrViewService = new EMRViewService();
        String resultStrng;

        jsonObject.addProperty("empNo", "ORCL");
        jsonObject.addProperty("sessionID", 1);
        jsonObject.addProperty("chartNo", 912473);

        jsonObject.addProperty("method", "getChartEMRSummaryByChartNo");
        resultStrng = emrViewService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nInvService.run getChartEMRSummaryByChartNo chartNo='912473' : " + resultStrng);

        jsonObject.addProperty("years", 105);
        jsonObject.addProperty("method", "getChartEMRSummaryByChartNoAndYears");
        resultStrng = emrViewService.run(jsonObject);
        System.out.println("\nParameters JsonObject string: " + jsonObject);
        System.out.println("\nInvService.run getChartEMRSummaryByChartNoAndYears chartNo='912473' years=5 : " + resultStrng);

    }
}

